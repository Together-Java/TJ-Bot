plugins {
    id 'java'
    id "com.diffplug.spotless" version "6.0.0"
    id "org.sonarqube" version "3.3"
    id "name.remal.sonarlint" version "1.5.0"
}

group 'org.togetherjava'
version '1.0-SNAPSHOT'

// Skips sonarlint during the build, useful for testing purposes.
Boolean skipSonarlint = false

// Sonarqube task should be ran last, so it can collect all the useful data during the build.
project.tasks["sonarqube"].dependsOn "build"
sonarqube {
    properties {
        property "sonar.projectKey", "Together-Java_TJ-Bot"
        property "sonar.organization", "togetherjava"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "com.diffplug.spotless"
    apply plugin: "org.sonarqube"

    // All subprojects inherit root project group and version, to avoid duplication.
    group = rootProject.group
    version = rootProject.version

    repositories {
        mavenCentral()
    }

    if (!skipSonarlint) {
        apply plugin: "name.remal.sonarlint"
    }

    // sonarlint configuration, not to be confused with sonarqube/sonarcloud.
    sonarlint {
        excludes {
            // Disables "Track uses of "TODO" tags" rule.
            message 'java:S1135'

            // Disables "Regular expressions should not overflow the stack" rule.
            // https://sonarcloud.io/project/issues?id=Together-Java_TJ-Bot&issues=AXvleoajNC7zjjhmSufQ&open=AXvleoajNC7zjjhmSufQ
            // https://sonarcloud.io/project/issues?id=Together-Java_TJ-Bot&issues=AXvleoX5NC7zjjhmSufP&open=AXvleoX5NC7zjjhmSufP
            message 'java:S5998'
        }
    }


    compileJava {
        options.encoding = 'UTF-8'

        // Makes spotlessApply task run on every compile/build.
        dependsOn 'spotlessApply'

        // Nails the Java-Version of every Subproject
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    spotless {
        java {
            // Excludes build folder since it contains generated java classes.
            targetExclude("build/**")
            eclipse('4.19.0').configFile("${rootProject.rootDir}/meta/formatting/google-style-eclipse.xml")
        }
    }

    test {
        systemProperty 'file.encoding', 'UTF-8'
        useJUnitPlatform()
    }
}
