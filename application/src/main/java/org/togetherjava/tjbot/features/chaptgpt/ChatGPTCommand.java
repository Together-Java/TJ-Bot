package org.togetherjava.tjbot.features.chaptgpt;

import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;
import net.dv8tion.jda.api.interactions.commands.OptionType;

import org.togetherjava.tjbot.config.Config;
import org.togetherjava.tjbot.features.CommandVisibility;
import org.togetherjava.tjbot.features.SlashCommandAdapter;

/**
 * The implemented command is {@code /chatgpt}, upon which the bot will respond with a response
 * generated by ChatGPT.
 */
public final class ChatGPTCommand extends SlashCommandAdapter {
    private static final String PROMPT = "prompt";
    private final ChatGPTService chatGPTService;

    /**
     * Creates an instance of the chatgpt command.
     *
     * @param config Config - Required to get token needed for ChatGPT API
     */
    public ChatGPTCommand(Config config) {
        super("chatgpt", "User enters a prompt and then gets a response generated by ChatGPT",
                CommandVisibility.GUILD);

        chatGPTService = new ChatGPTService(config);

        getData().addOption(OptionType.STRING, PROMPT, "Prompt sent to ChatGPT", true);
    }

    @Override
    public void onSlashCommand(SlashCommandInteractionEvent event) {
        event.deferReply().queue();
        String response = chatGPTService.ask(event.getOption(PROMPT).getAsString());
        event.getHook().sendMessage(response).queue();
    }
}
